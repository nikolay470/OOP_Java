```задание, включающее в себя использование абстрактных классов, интерфейсов и принципов ООП
(инкапсуляции, наследования и полиморфизма):

Задание: Разработка системы управления транспортными средствами

Создайте систему управления транспортными средствами с использованием принципов объектно-ориентированного программирования.
В системе должны присутствовать следующие классы и интерфейсы:

Абстрактный класс Vehicle:

Содержит общие свойства и методы для всех видов транспортных средств.
Свойства: int id (уникальный идентификатор), String brand (марка), String model (модель), int year (год выпуска).
Методы:
abstract void startEngine() - запуск двигателя (реализация в подклассах).
abstract void stopEngine() - остановка двигателя (реализация в подклассах).
abstract void accelerate(int speed) - увеличение скорости на указанное значение (реализация в подклассах).
abstract void brake() - прекращение движения (реализация в подклассах).
abstract void displayInfo() - вывод информации о транспортном средстве (реализация в подклассах).

Интерфейс Flyable (летающие транспортные средства):
Методы: void takeOff(), void land().

Интерфейс Swimmable (плавающие транспортные средства):
Методы: void startSwimming(), void stopSwimming().

Класс Car (автомобили):
Наследует от Vehicle.
Реализует методы абстрактного класса Vehicle.
Добавляет свойства: int fuelCapacity (емкость топливного бака), int currentFuelLevel (текущий уровень топлива).
Реализует методы:
abstract void startEngine() - запуск двигателя автомобиля.
abstract void stopEngine() - остановка двигателя автомобиля.
abstract void accelerate(int speed) - увеличение скорости автомобиля на указанное значение.
abstract void brake() - прекращение движения автомобиля.
abstract void refuel(int liters) - заправка автомобиля (увеличение уровня топлива).

Класс Aircraft (самолеты):
Наследует от Vehicle.
Реализует методы абстрактного класса Vehicle.
Реализует методы интерфейса Flyable.
Добавляет свойства: int maxAltitude (максимальная высота полета), boolean isFlying (флаг состояния полета).
Реализует методы:
abstract void startEngine() - запуск двигателя самолета.
abstract void stopEngine() - остановка двигателя самолета.
abstract void takeoff() - взлет самолета.
abstract void land() - посадка самолета.

Класс Boat (лодки):
Наследует от Vehicle.
Реализует методы абстрактного класса Vehicle.
Реализует методы интерфейса Swimmable.
Добавляет свойства: int maxSpeed (максимальная скорость на воде), boolean isSailing (флаг состояния движения по воде).
Реализует методы:
abstract void startEngine() - запуск двигателя лодки.
abstract void stopEngine() - остановка двигателя лодки.
abstract void startSwimming() - начало движения лодки по воде.
abstract void stopSwimming() - прекращение движения лодки по воде.

Главный класс Main для проверки:
Создайте объекты различных транспортных средств (автомобиль, самолет, лодка).
Продемонстрируйте их работу, вызывая соответствующие методы (запуск двигателя, движение, взлет, посадка и т.д.).
Выведите информацию о каждом транспортном средстве с использованием метода displayInfo()